{
  "version": 3,
  "sources": ["../ctor/lib/defaults.json", "../ctor/lib/is_integer.js", "../ctor/lib/validate.js", "../ctor/lib/process.js", "../ctor/lib/console.js", "../ctor/lib/exit_code.js", "../ctor/lib/notifier.js", "../ctor/lib/main.js", "../ctor/lib/index.js", "../lib/index.js"],
  "sourcesContent": ["{\n\t\"pkg\": {},\n\t\"help\": \"\",\n\t\"title\": true,\n\t\"version\": \"\",\n\t\"updates\": true,\n\t\"argv\": null,\n\t\"options\": {}\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @private\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\t// NOTE: we explicitly avoid using `@stdlib/math/base/special` here in order to avoid circular dependencies.\n\treturn ( Math.floor( x ) === x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Object} [options.pkg] - package meta information (package.json)\n* @param {string} [options.version] - command-line interface version\n* @param {string} [options.help] - help text\n* @param {(string|boolean)} [options.title] - process title or a boolean indicating whether to set the process title\n* @param {boolean} [options.updates] - boolean indicating whether to check if a command-line interface is an outdated version\n* @param {Array} [options.argv] - command-line arguments\n* @param {Options} [options.options] - command-line interface options\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'pkg': {},\n*     'version': '1.0.0',\n*     'help': 'Usage: beep [options] <boop>',\n*     'title': 'foo',\n*     'updates': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( typeof options !== 'object' || options === null || isArray( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp.call( options, 'pkg' ) ) {\n\t\topts.pkg = options.pkg;\n\t\tif ( typeof opts.pkg !== 'object' || opts.pkg === null || isArray( opts.pkg ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an object. Option: `%s`.', 'pkg', opts.pkg ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'help' ) ) {\n\t\topts.help = options.help;\n\t\tif ( typeof opts.help !== 'string' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'help', opts.help ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'version' ) ) {\n\t\topts.version = options.version;\n\t\tif ( typeof opts.version !== 'string' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'version', opts.version ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'title' ) ) {\n\t\topts.title = options.title;\n\t\tif ( typeof opts.title !== 'string' && typeof opts.title !== 'boolean' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a string or boolean primitive. Option: `%s`.', 'title', opts.title ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'updates' ) ) {\n\t\topts.updates = options.updates;\n\t\tif ( typeof opts.updates !== 'boolean' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'updates', opts.updates ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'argv' ) ) {\n\t\topts.argv = options.argv;\n\t\tif ( !isArray( opts.argv ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'argv', opts.argv ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'options' ) ) {\n\t\topts.options = options.options;\n\t\tif ( typeof opts.options !== 'object' || opts.options === null || isArray( opts.options ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a plain object. Option: `%s`.', 'options', opts.options ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nmodule.exports = proc;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = console;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( './process.js' );\n\n\n// VARIABLES //\n\nvar NODE_VERSION = proc.versions.node;\nvar TIMEOUT = 10; // ms\n\n\n// MAIN //\n\n/**\n* Sets the process exit code.\n*\n* @private\n* @param {Object} proc - process object\n* @param {NonNegativeInteger} code - exit code\n* @returns {void}\n*/\nfunction exitCode( proc, code ) {\n\tvar v;\n\n\t// Handle old Node.js versions lacking `process.exitCode` support...\n\tv = NODE_VERSION.split( '.' );\n\tv[ 0 ] = parseInt( v[ 0 ], 10 );\n\tv[ 1 ] = parseInt( v[ 1 ], 10 );\n\n\t// Case: >0.x.x\n\tif ( v[ 0 ] > 0 ) {\n\t\tproc.exitCode = code;\n\t\treturn;\n\t}\n\t// Case: >0.10.x\n\tif ( v[ 1 ] > 10 ) {\n\t\tproc.exitCode = code;\n\t\treturn;\n\t}\n\t// Case: <= 0.10.x\n\tproc.exitCode = code; // NOTE: assigning this property should have no operational effect in older Node.js versions\n\n\t// No choice but to forcefully exit during a subsequent turn of the event loop (note: the timeout duration is arbitrary; the main idea is to hopefully allow the event loop queue to drain before exiting the process, including the flushing of stdio streams which can be non-blocking/asynchronous)...\n\tsetTimeout( onTimeout, TIMEOUT );\n\n\t/**\n\t* Callback invoked during a subsequent turn of the event loop.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tproc.exit( code );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = exitCode;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n// FIXME: remove this stub and create a stdlib equivalent of update-notifier\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar noop = require( '@stdlib/utils/noop' );\n\n\n// MAIN //\n\n/**\n* Notifier constructor.\n*\n* @private\n* @constructor\n* @returns {Notifier} notifier instance\n*\n* @example\n* var notifier = new Notifier();\n*/\nfunction Notifier() {\n\tif ( !(this instanceof Notifier) ) {\n\t\treturn new Notifier();\n\t}\n\treturn this;\n}\n\n/**\n* Notifies whether a new version is available.\n*\n* @private\n* @name notify\n* @memberof Notifier.prototype\n* @type {Function}\n*/\nsetReadOnly( Notifier.prototype, 'notify', noop );\n\n\n// EXPORTS //\n\nmodule.exports = Notifier;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar parseArgs = require( 'minimist' ); // TODO: replace with stdlib equivalent\nvar format = require( '@stdlib/string/format' );\nvar defaults = require( './defaults.json' );\nvar isInteger = require( './is_integer.js' );\nvar validate = require( './validate.js' );\nvar proc = require( './process.js' );\nvar log = require( './console.js' );\nvar exitCode = require( './exit_code.js' );\nvar notifier = require( './notifier.js' );\n\n\n// VARIABLES //\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies. This should not be problematic as (1) this package is unlikely to be used outside of Node.js and, thus, in environments lacking support for the built-in APIs, and (2) most of the historical bugs for the respective APIs were in environments such as IE and not the versions of V8 included in Node.js >= v0.10.x.\nvar defineProperty = Object.defineProperty;\nvar objectKeys = Object.keys;\n\n\n// FUNCTIONS //\n\n/**\n* Defines a read-only non-enumerable property.\n*\n* @private\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// MAIN //\n\n/**\n* Command-line interface constructor.\n*\n* @constructor\n* @param {Options} [options] - options\n* @param {Object} [options.pkg={}] - package meta information (package.json)\n* @param {string} [options.version] - command-line interface version\n* @param {string} [options.help=\"\"] - help text\n* @param {(string|boolean)} [options.title=true] - process title or a boolean indicating whether to set the process title\n* @param {boolean} [options.updates=true] - boolean indicating whether to check if a command-line interface is an outdated version\n* @param {Array} [options.argv] - command-line arguments\n* @param {Options} [options.options={}] - command-line interface options\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @returns {CLI} command-line interface\n*\n* @example\n* var opts = {\n*     'pkg': require( './path/to/package.json' ),\n*     'help': 'Usage: beep [options] <boop>',\n*     'title': 'foo',\n*     'updates': true,\n*     'options': {\n*         'boolean': [\n*             'help',\n*             'version'\n*         ]\n*     }\n* };\n* var cli = new CLI( opts );\n* // returns <CLI>\n*\n* cli.close();\n*/\nfunction CLI( options ) {\n\tvar nopts;\n\tvar flags;\n\tvar keys;\n\tvar opts;\n\tvar argv;\n\tvar args;\n\tvar self;\n\tvar err;\n\tif ( !( this instanceof CLI ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new CLI( options );\n\t\t}\n\t\treturn new CLI();\n\t}\n\topts = {\n\t\t'pkg': {},\n\t\t'help': defaults.help,\n\t\t'title': defaults.title,\n\t\t'version': defaults.version,\n\t\t'updates': defaults.updates,\n\t\t'argv': defaults.argv,\n\t\t'options': {}\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tself = this;\n\n\t// Force the process to exit if an error is encountered when writing to `stdout` or `stderr`:\n\tproc.stdout.on( 'error', proc.exit );\n\tproc.stderr.on( 'error', proc.exit );\n\n\t/**\n\t* Returns parsed command-line arguments.\n\t*\n\t* @name args\n\t* @memberof CLI#\n\t* @type {Function}\n\t* @returns {StringArray} parsed command-line arguments\n\t*\n\t* @example\n\t* var cli = new CLI();\n\t*\n\t* var args = cli.args();\n\t* // returns <Array>\n\t*/\n\tsetReadOnly( this, 'args', getArgs );\n\n\t/**\n\t* Returns parsed command-line flags.\n\t*\n\t* @name flags\n\t* @memberof CLI#\n\t* @type {Function}\n\t* @returns {Object} parsed command-line flags\n\t*\n\t* @example\n\t* var cli = new CLI();\n\t*\n\t* var flags = cli.flags();\n\t* // returns <Object>\n\t*/\n\tsetReadOnly( this, 'flags', getFlags );\n\n\t/**\n\t* Prints usage information and exits the process.\n\t*\n\t* @name help\n\t* @memberof CLI#\n\t* @type {Function}\n\t*\n\t* @example\n\t* var opts = {\n\t*     'help': 'Usage: beep [options] <boop>'\n\t* };\n\t* var cli = new CLI( opts );\n\t*\n\t* cli.help();\n\t* // => 'Usage: beep [options] <boop>'\n\t*/\n\tsetReadOnly( this, 'help', help );\n\n\t/**\n\t* Prints the command-line interface version and exits the process.\n\t*\n\t* @name version\n\t* @memberof CLI#\n\t* @type {Function}\n\t*\n\t* @example\n\t* var opts = {\n\t*     'pkg': require( './path/to/package.json' )\n\t* };\n\t* var cli = new CLI( opts );\n\t*\n\t* cli.version();\n\t* // => '#.#.#'\n\t*/\n\tsetReadOnly( this, 'version', version );\n\n\t// Check whether to set the process title...\n\tif ( opts.title === true && opts.pkg ) {\n\t\tif ( typeof opts.pkg.bin === 'object' && opts.pkg.bin !== null ) {\n\t\t\tkeys = objectKeys( opts.pkg.bin );\n\n\t\t\t// Note: we don't have a way of knowing which command name in the `bin` hash was invoked; thus, we assume the first entry.\n\t\t\tproc.title = keys[ 0 ];\n\t\t} else if ( opts.pkg.name ) {\n\t\t\tproc.title = opts.pkg.name;\n\t\t}\n\t} else if ( opts.title ) {\n\t\tproc.title = opts.title;\n\t}\n\t// Check whether to notify the user of a new CLI version...\n\tif ( opts.updates && opts.pkg && opts.pkg.name && opts.pkg.version ) {\n\t\tnopts = {\n\t\t\t'pkg': opts.pkg\n\t\t};\n\t\tnotifier( nopts ).notify();\n\t}\n\t// Determine the command-line interface version...\n\tif ( !opts.version && opts.pkg && opts.pkg.version ) {\n\t\topts.version = opts.pkg.version;\n\t}\n\t// Parse command-line arguments:\n\tif ( opts.argv ) {\n\t\topts.argv = opts.argv.slice( 2 );\n\t} else {\n\t\topts.argv = proc.argv.slice( 2 );\n\t}\n\targv = parseArgs( opts.argv, opts.options );\n\n\t// Cache parsed arguments:\n\targs = argv._;\n\tdelete argv._;\n\tflags = argv;\n\n\t// Determine whether to print help text...\n\tif ( flags.help ) {\n\t\treturn this.help( 0 );\n\t}\n\t// Determine whether to print the version...\n\tif ( flags.version ) {\n\t\treturn this.version();\n\t}\n\treturn this;\n\n\t/**\n\t* Returns parsed command-line arguments.\n\t*\n\t* @private\n\t* @returns {StringArray} parsed command-line arguments\n\t*/\n\tfunction getArgs() {\n\t\treturn args.slice();\n\t}\n\n\t/**\n\t* Returns parsed command-line flags.\n\t*\n\t* @private\n\t* @returns {Object} parsed command-line flags\n\t*/\n\tfunction getFlags() {\n\t\tvar keys;\n\t\tvar o;\n\t\tvar k;\n\t\tvar i;\n\n\t\tkeys = objectKeys( flags );\n\t\to = {};\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tk = keys[ i ];\n\t\t\to[ k ] = flags[ k ];\n\t\t}\n\t\treturn o;\n\t}\n\n\t/**\n\t* Prints usage information.\n\t*\n\t* ## Notes\n\t*\n\t* -   Upon printing usage information, the function forces the process to exit.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} [code=0] - exit code\n\t*/\n\tfunction help( code ) {\n\t\tlog.error( opts.help );\n\t\tself.close( code || 0 );\n\t}\n\n\t/**\n\t* Prints the command-line interface version.\n\t*\n\t* ## Notes\n\t*\n\t* -   Upon printing the version, the function forces the process to exit.\n\t*\n\t* @private\n\t*/\n\tfunction version() {\n\t\tlog.error( opts.version );\n\t\tself.close();\n\t}\n}\n\n/**\n* Gracefully exits the command-line interface and the calling process.\n*\n* @name close\n* @memberof CLI.prototype\n* @type {Function}\n* @param {NonNegativeInteger} [code=0] - exit code\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // Gracefully exit:\n* cli.close();\n*/\nsetReadOnly( CLI.prototype, 'close', function close( code ) {\n\tif ( arguments.length === 0 ) {\n\t\texitCode( proc, 0 );\n\t\treturn;\n\t}\n\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', code ) );\n\t}\n\texitCode( proc, code );\n});\n\n/**\n* Exits the command-line interface and the calling process due to an error.\n*\n* ## Notes\n*\n* -   The value assigned to the `message` property of the provided `Error` object is printed to `stderr` prior to exiting the command-line interface and the calling process.\n*\n* @name error\n* @memberof CLI.prototype\n* @type {Function}\n* @param {Error} error - error object\n* @param {NonNegativeInteger} [code=1] - exit code\n* @throws {TypeError} first argument must be an error object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // ...\n*\n* // Create an error object:\n* var err = new Error( 'invalid operation' );\n*\n* // Exit the process:\n* cli.error( err, 0 );\n*/\nsetReadOnly( CLI.prototype, 'error', function onError( error, code ) {\n\tvar c;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an error object. Value: `%s`.', error ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', code ) );\n\t\t}\n\t\tc = code;\n\t} else {\n\t\tc = 1;\n\t}\n\tlog.error( 'Error: %s', error.message );\n\texitCode( proc, c );\n});\n\n/**\n* Forces the command-line interface (and the calling process) to exit.\n*\n* @name exit\n* @memberof CLI.prototype\n* @type {Function}\n* @param {NonNegativeInteger} [code=0] - exit code\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // Forcefully exit:\n* cli.exit();\n*/\nsetReadOnly( CLI.prototype, 'exit', function exit( code ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn proc.exit( 0 );\n\t}\n\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', code ) );\n\t}\n\tproc.exit( code );\n});\n\n\n// EXPORTS //\n\nmodule.exports = CLI;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Command-line interface (CLI).\n*\n* @module @stdlib/cli/ctor\n*\n* @example\n* var CLI = require( '@stdlib/cli/ctor' );\n*\n* var opts = {\n*     'pkg': require( './path/to/package.json' ),\n*     'help': 'Usage: beep [options] <boop>',\n*     'title': 'foo',\n*     'updates': true,\n*     'options': {\n*         'boolean': [\n*             'help',\n*             'version'\n*         ]\n*     }\n* };\n* var cli = new CLI( opts );\n* // returns <CLI>\n*\n* cli.close();\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name CLI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/cli/ctor}\n*/\nsetReadOnly( ns, 'CLI', require( './../ctor' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "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",
  "names": ["require_defaults", "__commonJSMin", "exports", "module", "require_is_integer", "__commonJSMin", "exports", "module", "isInteger", "x", "require_validate", "__commonJSMin", "exports", "module", "format", "hasOwnProp", "isArray", "validate", "opts", "options", "require_process", "__commonJSMin", "exports", "module", "proc", "require_console", "__commonJSMin", "exports", "module", "require_exit_code", "__commonJSMin", "exports", "module", "proc", "NODE_VERSION", "TIMEOUT", "exitCode", "code", "v", "onTimeout", "require_notifier", "__commonJSMin", "exports", "module", "setReadOnly", "noop", "Notifier", "require_main", "__commonJSMin", "exports", "module", "parseArgs", "format", "defaults", "isInteger", "validate", "proc", "log", "exitCode", "notifier", "defineProperty", "objectKeys", "setReadOnly", "obj", "prop", "value", "CLI", "options", "nopts", "flags", "keys", "opts", "argv", "args", "self", "err", "getArgs", "getFlags", "help", "version", "o", "k", "i", "code", "error", "c", "require_lib", "__commonJSMin", "exports", "module", "main", "setReadOnly", "ns"]
}
