{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/minimist/index.js","../ctor/lib/is_integer.js","../ctor/lib/validate.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../ctor/lib/process.js","../ctor/lib/console.js","../ctor/lib/exit_code.js","../ctor/lib/notifier.js","../node_modules/@stdlib/utils/noop/lib/main.js","../ctor/lib/main.js","../lib/index.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating whether a value is `NaN`.\n*\n* @private\n* @param {*} value - input value\n* @returns {boolean} boolean indicating whether a value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 4 );\n* // returns false\n*/\nfunction isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies\n\treturn ( value !== value );\n}\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\ttoken.arg = String( token.arg );\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from './../../base/format-interpolate';\nimport tokenize from './../../base/format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","'use strict';\n\nfunction hasKey(obj, keys) {\n\tvar o = obj;\n\tkeys.slice(0, -1).forEach(function (key) {\n\t\to = o[key] || {};\n\t});\n\n\tvar key = keys[keys.length - 1];\n\treturn key in o;\n}\n\nfunction isNumber(x) {\n\tif (typeof x === 'number') { return true; }\n\tif ((/^0x[0-9a-f]+$/i).test(x)) { return true; }\n\treturn (/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/).test(x);\n}\n\nfunction isConstructorOrProto(obj, key) {\n\treturn (key === 'constructor' && typeof obj[key] === 'function') || key === '__proto__';\n}\n\nmodule.exports = function (args, opts) {\n\tif (!opts) { opts = {}; }\n\n\tvar flags = {\n\t\tbools: {},\n\t\tstrings: {},\n\t\tunknownFn: null,\n\t};\n\n\tif (typeof opts.unknown === 'function') {\n\t\tflags.unknownFn = opts.unknown;\n\t}\n\n\tif (typeof opts.boolean === 'boolean' && opts.boolean) {\n\t\tflags.allBools = true;\n\t} else {\n\t\t[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n\t\t\tflags.bools[key] = true;\n\t\t});\n\t}\n\n\tvar aliases = {};\n\n\tfunction aliasIsBoolean(key) {\n\t\treturn aliases[key].some(function (x) {\n\t\t\treturn flags.bools[x];\n\t\t});\n\t}\n\n\tObject.keys(opts.alias || {}).forEach(function (key) {\n\t\taliases[key] = [].concat(opts.alias[key]);\n\t\taliases[key].forEach(function (x) {\n\t\t\taliases[x] = [key].concat(aliases[key].filter(function (y) {\n\t\t\t\treturn x !== y;\n\t\t\t}));\n\t\t});\n\t});\n\n\t[].concat(opts.string).filter(Boolean).forEach(function (key) {\n\t\tflags.strings[key] = true;\n\t\tif (aliases[key]) {\n\t\t\t[].concat(aliases[key]).forEach(function (k) {\n\t\t\t\tflags.strings[k] = true;\n\t\t\t});\n\t\t}\n\t});\n\n\tvar defaults = opts.default || {};\n\n\tvar argv = { _: [] };\n\n\tfunction argDefined(key, arg) {\n\t\treturn (flags.allBools && (/^--[^=]+$/).test(arg))\n\t\t\t|| flags.strings[key]\n\t\t\t|| flags.bools[key]\n\t\t\t|| aliases[key];\n\t}\n\n\tfunction setKey(obj, keys, value) {\n\t\tvar o = obj;\n\t\tfor (var i = 0; i < keys.length - 1; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (isConstructorOrProto(o, key)) { return; }\n\t\t\tif (o[key] === undefined) { o[key] = {}; }\n\t\t\tif (\n\t\t\t\to[key] === Object.prototype\n\t\t\t\t|| o[key] === Number.prototype\n\t\t\t\t|| o[key] === String.prototype\n\t\t\t) {\n\t\t\t\to[key] = {};\n\t\t\t}\n\t\t\tif (o[key] === Array.prototype) { o[key] = []; }\n\t\t\to = o[key];\n\t\t}\n\n\t\tvar lastKey = keys[keys.length - 1];\n\t\tif (isConstructorOrProto(o, lastKey)) { return; }\n\t\tif (\n\t\t\to === Object.prototype\n\t\t\t|| o === Number.prototype\n\t\t\t|| o === String.prototype\n\t\t) {\n\t\t\to = {};\n\t\t}\n\t\tif (o === Array.prototype) { o = []; }\n\t\tif (o[lastKey] === undefined || flags.bools[lastKey] || typeof o[lastKey] === 'boolean') {\n\t\t\to[lastKey] = value;\n\t\t} else if (Array.isArray(o[lastKey])) {\n\t\t\to[lastKey].push(value);\n\t\t} else {\n\t\t\to[lastKey] = [o[lastKey], value];\n\t\t}\n\t}\n\n\tfunction setArg(key, val, arg) {\n\t\tif (arg && flags.unknownFn && !argDefined(key, arg)) {\n\t\t\tif (flags.unknownFn(arg) === false) { return; }\n\t\t}\n\n\t\tvar value = !flags.strings[key] && isNumber(val)\n\t\t\t? Number(val)\n\t\t\t: val;\n\t\tsetKey(argv, key.split('.'), value);\n\n\t\t(aliases[key] || []).forEach(function (x) {\n\t\t\tsetKey(argv, x.split('.'), value);\n\t\t});\n\t}\n\n\tObject.keys(flags.bools).forEach(function (key) {\n\t\tsetArg(key, defaults[key] === undefined ? false : defaults[key]);\n\t});\n\n\tvar notFlags = [];\n\n\tif (args.indexOf('--') !== -1) {\n\t\tnotFlags = args.slice(args.indexOf('--') + 1);\n\t\targs = args.slice(0, args.indexOf('--'));\n\t}\n\n\tfor (var i = 0; i < args.length; i++) {\n\t\tvar arg = args[i];\n\t\tvar key;\n\t\tvar next;\n\n\t\tif ((/^--.+=/).test(arg)) {\n\t\t\t// Using [\\s\\S] instead of . because js doesn't support the\n\t\t\t// 'dotall' regex modifier. See:\n\t\t\t// http://stackoverflow.com/a/1068308/13216\n\t\t\tvar m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n\t\t\tkey = m[1];\n\t\t\tvar value = m[2];\n\t\t\tif (flags.bools[key]) {\n\t\t\t\tvalue = value !== 'false';\n\t\t\t}\n\t\t\tsetArg(key, value, arg);\n\t\t} else if ((/^--no-.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--no-(.+)/)[1];\n\t\t\tsetArg(key, false, arg);\n\t\t} else if ((/^--.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--(.+)/)[1];\n\t\t\tnext = args[i + 1];\n\t\t\tif (\n\t\t\t\tnext !== undefined\n\t\t\t\t&& !(/^(-|--)[^-]/).test(next)\n\t\t\t\t&& !flags.bools[key]\n\t\t\t\t&& !flags.allBools\n\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t) {\n\t\t\t\tsetArg(key, next, arg);\n\t\t\t\ti += 1;\n\t\t\t} else if ((/^(true|false)$/).test(next)) {\n\t\t\t\tsetArg(key, next === 'true', arg);\n\t\t\t\ti += 1;\n\t\t\t} else {\n\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t}\n\t\t} else if ((/^-[^-]+/).test(arg)) {\n\t\t\tvar letters = arg.slice(1, -1).split('');\n\n\t\t\tvar broken = false;\n\t\t\tfor (var j = 0; j < letters.length; j++) {\n\t\t\t\tnext = arg.slice(j + 2);\n\n\t\t\t\tif (next === '-') {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ((/[A-Za-z]/).test(letters[j]) && next[0] === '=') {\n\t\t\t\t\tsetArg(letters[j], next.slice(1), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(/[A-Za-z]/).test(letters[j])\n\t\t\t\t\t&& (/-?\\d+(\\.\\d*)?(e-?\\d+)?$/).test(next)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n\t\t\t\t\tsetArg(letters[j], arg.slice(j + 2), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkey = arg.slice(-1)[0];\n\t\t\tif (!broken && key !== '-') {\n\t\t\t\tif (\n\t\t\t\t\targs[i + 1]\n\t\t\t\t\t&& !(/^(-|--)[^-]/).test(args[i + 1])\n\t\t\t\t\t&& !flags.bools[key]\n\t\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(key, args[i + 1], arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (args[i + 1] && (/^(true|false)$/).test(args[i + 1])) {\n\t\t\t\t\tsetArg(key, args[i + 1] === 'true', arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n\t\t\t\targv._.push(flags.strings._ || !isNumber(arg) ? arg : Number(arg));\n\t\t\t}\n\t\t\tif (opts.stopEarly) {\n\t\t\t\targv._.push.apply(argv._, args.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.keys(defaults).forEach(function (k) {\n\t\tif (!hasKey(argv, k.split('.'))) {\n\t\t\tsetKey(argv, k.split('.'), defaults[k]);\n\n\t\t\t(aliases[k] || []).forEach(function (x) {\n\t\t\t\tsetKey(argv, x.split('.'), defaults[k]);\n\t\t\t});\n\t\t}\n\t});\n\n\tif (opts['--']) {\n\t\targv['--'] = notFlags.slice();\n\t} else {\n\t\tnotFlags.forEach(function (k) {\n\t\t\targv._.push(k);\n\t\t});\n\t}\n\n\treturn argv;\n};\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @private\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\t// NOTE: we explicitly avoid using `@stdlib/math/base/special` here in order to avoid circular dependencies.\n\treturn ( Math.floor( x ) === x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Object} [options.pkg] - package meta information (package.json)\n* @param {string} [options.version] - command-line interface version\n* @param {string} [options.help] - help text\n* @param {(string|boolean)} [options.title] - process title or a boolean indicating whether to set the process title\n* @param {boolean} [options.updates] - boolean indicating whether to check if a command-line interface is an outdated version\n* @param {Array} [options.argv] - command-line arguments\n* @param {Options} [options.options] - command-line interface options\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'pkg': {},\n*     'version': '1.0.0',\n*     'help': 'Usage: beep [options] <boop>',\n*     'title': 'foo',\n*     'updates': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( typeof options !== 'object' || options === null || isArray( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp.call( options, 'pkg' ) ) {\n\t\topts.pkg = options.pkg;\n\t\tif ( typeof opts.pkg !== 'object' || opts.pkg === null || isArray( opts.pkg ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an object. Option: `%s`.', 'pkg', opts.pkg ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'help' ) ) {\n\t\topts.help = options.help;\n\t\tif ( typeof opts.help !== 'string' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'help', opts.help ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'version' ) ) {\n\t\topts.version = options.version;\n\t\tif ( typeof opts.version !== 'string' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'version', opts.version ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'title' ) ) {\n\t\topts.title = options.title;\n\t\tif ( typeof opts.title !== 'string' && typeof opts.title !== 'boolean' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a string or boolean primitive. Option: `%s`.', 'title', opts.title ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'updates' ) ) {\n\t\topts.updates = options.updates;\n\t\tif ( typeof opts.updates !== 'boolean' ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'updates', opts.updates ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'argv' ) ) {\n\t\topts.argv = options.argv;\n\t\tif ( !isArray( opts.argv ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'argv', opts.argv ) );\n\t\t}\n\t}\n\tif ( hasOwnProp.call( options, 'options' ) ) {\n\t\topts.options = options.options;\n\t\tif ( typeof opts.options !== 'object' || opts.options === null || isArray( opts.options ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a plain object. Option: `%s`.', 'options', opts.options ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nexport default proc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default console;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport proc from './process.js';\n\n\n// VARIABLES //\n\nvar NODE_VERSION = proc.versions.node;\nvar TIMEOUT = 10; // ms\n\n\n// MAIN //\n\n/**\n* Sets the process exit code.\n*\n* @private\n* @param {Object} proc - process object\n* @param {NonNegativeInteger} code - exit code\n* @returns {void}\n*/\nfunction exitCode( proc, code ) {\n\tvar v;\n\n\t// Handle old Node.js versions lacking `process.exitCode` support...\n\tv = NODE_VERSION.split( '.' );\n\tv[ 0 ] = parseInt( v[ 0 ], 10 );\n\tv[ 1 ] = parseInt( v[ 1 ], 10 );\n\n\t// Case: >0.x.x\n\tif ( v[ 0 ] > 0 ) {\n\t\tproc.exitCode = code;\n\t\treturn;\n\t}\n\t// Case: >0.10.x\n\tif ( v[ 1 ] > 10 ) {\n\t\tproc.exitCode = code;\n\t\treturn;\n\t}\n\t// Case: <= 0.10.x\n\tproc.exitCode = code; // NOTE: assigning this property should have no operational effect in older Node.js versions\n\n\t// No choice but to forcefully exit during a subsequent turn of the event loop (note: the timeout duration is arbitrary; the main idea is to hopefully allow the event loop queue to drain before exiting the process, including the flushing of stdio streams which can be non-blocking/asynchronous)...\n\tsetTimeout( onTimeout, TIMEOUT );\n\n\t/**\n\t* Callback invoked during a subsequent turn of the event loop.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tproc.exit( code );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default exitCode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n// FIXME: remove this stub and create a stdlib equivalent of update-notifier\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport noop from '@stdlib/utils/noop';\n\n\n// MAIN //\n\n/**\n* Notifier constructor.\n*\n* @private\n* @constructor\n* @returns {Notifier} notifier instance\n*\n* @example\n* var notifier = new Notifier();\n*/\nfunction Notifier() {\n\tif ( !(this instanceof Notifier) ) {\n\t\treturn new Notifier();\n\t}\n\treturn this;\n}\n\n/**\n* Notifies whether a new version is available.\n*\n* @private\n* @name notify\n* @memberof Notifier.prototype\n* @type {Function}\n*/\nsetReadOnly( Notifier.prototype, 'notify', noop );\n\n\n// EXPORTS //\n\nexport default Notifier;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar parseArgs = require( 'minimist' ); // TODO: replace with stdlib equivalent\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.json';\nimport isInteger from './is_integer.js';\nimport validate from './validate.js';\nimport proc from './process.js';\nimport log from './console.js';\nimport exitCode from './exit_code.js';\nimport notifier from './notifier.js';\n\n\n// VARIABLES //\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies. This should not be problematic as (1) this package is unlikely to be used outside of Node.js and, thus, in environments lacking support for the built-in APIs, and (2) most of the historical bugs for the respective APIs were in environments such as IE and not the versions of V8 included in Node.js >= v0.10.x.\nvar defineProperty = Object.defineProperty;\nvar objectKeys = Object.keys;\n\n\n// FUNCTIONS //\n\n/**\n* Defines a read-only non-enumerable property.\n*\n* @private\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// MAIN //\n\n/**\n* Command-line interface constructor.\n*\n* @constructor\n* @param {Options} [options] - options\n* @param {Object} [options.pkg={}] - package meta information (package.json)\n* @param {string} [options.version] - command-line interface version\n* @param {string} [options.help=\"\"] - help text\n* @param {(string|boolean)} [options.title=true] - process title or a boolean indicating whether to set the process title\n* @param {boolean} [options.updates=true] - boolean indicating whether to check if a command-line interface is an outdated version\n* @param {Array} [options.argv] - command-line arguments\n* @param {Options} [options.options={}] - command-line interface options\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @returns {CLI} command-line interface\n*\n* @example\n* var opts = {\n*     'pkg': require( './path/to/package.json' ),\n*     'help': 'Usage: beep [options] <boop>',\n*     'title': 'foo',\n*     'updates': true,\n*     'options': {\n*         'boolean': [\n*             'help',\n*             'version'\n*         ]\n*     }\n* };\n* var cli = new CLI( opts );\n* // returns <CLI>\n*\n* cli.close();\n*/\nfunction CLI( options ) {\n\tvar nopts;\n\tvar flags;\n\tvar keys;\n\tvar opts;\n\tvar argv;\n\tvar args;\n\tvar self;\n\tvar err;\n\tif ( !( this instanceof CLI ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new CLI( options );\n\t\t}\n\t\treturn new CLI();\n\t}\n\topts = {\n\t\t'pkg': {},\n\t\t'help': defaults.help,\n\t\t'title': defaults.title,\n\t\t'version': defaults.version,\n\t\t'updates': defaults.updates,\n\t\t'argv': defaults.argv,\n\t\t'options': {}\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tself = this;\n\n\t// Force the process to exit if an error is encountered when writing to `stdout` or `stderr`:\n\tproc.stdout.on( 'error', proc.exit );\n\tproc.stderr.on( 'error', proc.exit );\n\n\t/**\n\t* Returns parsed command-line arguments.\n\t*\n\t* @name args\n\t* @memberof CLI#\n\t* @type {Function}\n\t* @returns {StringArray} parsed command-line arguments\n\t*\n\t* @example\n\t* var cli = new CLI();\n\t*\n\t* var args = cli.args();\n\t* // returns <Array>\n\t*/\n\tsetReadOnly( this, 'args', getArgs );\n\n\t/**\n\t* Returns parsed command-line flags.\n\t*\n\t* @name flags\n\t* @memberof CLI#\n\t* @type {Function}\n\t* @returns {Object} parsed command-line flags\n\t*\n\t* @example\n\t* var cli = new CLI();\n\t*\n\t* var flags = cli.flags();\n\t* // returns <Object>\n\t*/\n\tsetReadOnly( this, 'flags', getFlags );\n\n\t/**\n\t* Prints usage information and exits the process.\n\t*\n\t* @name help\n\t* @memberof CLI#\n\t* @type {Function}\n\t*\n\t* @example\n\t* var opts = {\n\t*     'help': 'Usage: beep [options] <boop>'\n\t* };\n\t* var cli = new CLI( opts );\n\t*\n\t* cli.help();\n\t* // => 'Usage: beep [options] <boop>'\n\t*/\n\tsetReadOnly( this, 'help', help );\n\n\t/**\n\t* Prints the command-line interface version and exits the process.\n\t*\n\t* @name version\n\t* @memberof CLI#\n\t* @type {Function}\n\t*\n\t* @example\n\t* var opts = {\n\t*     'pkg': require( './path/to/package.json' )\n\t* };\n\t* var cli = new CLI( opts );\n\t*\n\t* cli.version();\n\t* // => '#.#.#'\n\t*/\n\tsetReadOnly( this, 'version', version );\n\n\t// Check whether to set the process title...\n\tif ( opts.title === true && opts.pkg ) {\n\t\tif ( typeof opts.pkg.bin === 'object' && opts.pkg.bin !== null ) {\n\t\t\tkeys = objectKeys( opts.pkg.bin );\n\n\t\t\t// Note: we don't have a way of knowing which command name in the `bin` hash was invoked; thus, we assume the first entry.\n\t\t\tproc.title = keys[ 0 ];\n\t\t} else if ( opts.pkg.name ) {\n\t\t\tproc.title = opts.pkg.name;\n\t\t}\n\t} else if ( opts.title ) {\n\t\tproc.title = opts.title;\n\t}\n\t// Check whether to notify the user of a new CLI version...\n\tif ( opts.updates && opts.pkg && opts.pkg.name && opts.pkg.version ) {\n\t\tnopts = {\n\t\t\t'pkg': opts.pkg\n\t\t};\n\t\tnotifier( nopts ).notify();\n\t}\n\t// Determine the command-line interface version...\n\tif ( !opts.version && opts.pkg && opts.pkg.version ) {\n\t\topts.version = opts.pkg.version;\n\t}\n\t// Parse command-line arguments:\n\tif ( opts.argv ) {\n\t\topts.argv = opts.argv.slice( 2 );\n\t} else {\n\t\topts.argv = proc.argv.slice( 2 );\n\t}\n\targv = parseArgs( opts.argv, opts.options );\n\n\t// Cache parsed arguments:\n\targs = argv._;\n\tdelete argv._;\n\tflags = argv;\n\n\t// Determine whether to print help text...\n\tif ( flags.help ) {\n\t\treturn this.help( 0 );\n\t}\n\t// Determine whether to print the version...\n\tif ( flags.version ) {\n\t\treturn this.version();\n\t}\n\treturn this;\n\n\t/**\n\t* Returns parsed command-line arguments.\n\t*\n\t* @private\n\t* @returns {StringArray} parsed command-line arguments\n\t*/\n\tfunction getArgs() {\n\t\treturn args.slice();\n\t}\n\n\t/**\n\t* Returns parsed command-line flags.\n\t*\n\t* @private\n\t* @returns {Object} parsed command-line flags\n\t*/\n\tfunction getFlags() {\n\t\tvar keys;\n\t\tvar o;\n\t\tvar k;\n\t\tvar i;\n\n\t\tkeys = objectKeys( flags );\n\t\to = {};\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tk = keys[ i ];\n\t\t\to[ k ] = flags[ k ];\n\t\t}\n\t\treturn o;\n\t}\n\n\t/**\n\t* Prints usage information.\n\t*\n\t* ## Notes\n\t*\n\t* -   Upon printing usage information, the function forces the process to exit.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} [code=0] - exit code\n\t*/\n\tfunction help( code ) {\n\t\tlog.error( opts.help );\n\t\tself.close( code || 0 );\n\t}\n\n\t/**\n\t* Prints the command-line interface version.\n\t*\n\t* ## Notes\n\t*\n\t* -   Upon printing the version, the function forces the process to exit.\n\t*\n\t* @private\n\t*/\n\tfunction version() {\n\t\tlog.error( opts.version );\n\t\tself.close();\n\t}\n}\n\n/**\n* Gracefully exits the command-line interface and the calling process.\n*\n* @name close\n* @memberof CLI.prototype\n* @type {Function}\n* @param {NonNegativeInteger} [code=0] - exit code\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // Gracefully exit:\n* cli.close();\n*/\nsetReadOnly( CLI.prototype, 'close', function close( code ) {\n\tif ( arguments.length === 0 ) {\n\t\texitCode( proc, 0 );\n\t\treturn;\n\t}\n\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', code ) );\n\t}\n\texitCode( proc, code );\n});\n\n/**\n* Exits the command-line interface and the calling process due to an error.\n*\n* ## Notes\n*\n* -   The value assigned to the `message` property of the provided `Error` object is printed to `stderr` prior to exiting the command-line interface and the calling process.\n*\n* @name error\n* @memberof CLI.prototype\n* @type {Function}\n* @param {Error} error - error object\n* @param {NonNegativeInteger} [code=1] - exit code\n* @throws {TypeError} first argument must be an error object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // ...\n*\n* // Create an error object:\n* var err = new Error( 'invalid operation' );\n*\n* // Exit the process:\n* cli.error( err, 0 );\n*/\nsetReadOnly( CLI.prototype, 'error', function onError( error, code ) {\n\tvar c;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an error object. Value: `%s`.', error ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', code ) );\n\t\t}\n\t\tc = code;\n\t} else {\n\t\tc = 1;\n\t}\n\tlog.error( 'Error: %s', error.message );\n\texitCode( proc, c );\n});\n\n/**\n* Forces the command-line interface (and the calling process) to exit.\n*\n* @name exit\n* @memberof CLI.prototype\n* @type {Function}\n* @param {NonNegativeInteger} [code=0] - exit code\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {void}\n*\n* @example\n* var cli = new CLI();\n*\n* // Forcefully exit:\n* cli.exit();\n*/\nsetReadOnly( CLI.prototype, 'exit', function exit( code ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn proc.exit( 0 );\n\t}\n\tif ( typeof code !== 'number' || !isInteger( code ) || code < 0 ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', code ) );\n\t}\n\tproc.exit( code );\n});\n\n\n// EXPORTS //\n\nexport default CLI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name CLI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/cli/ctor}\n*/\nimport CLI from './../ctor';\nsetReadOnly( ns, 'CLI', CLI );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","fromCharCode","isArray","Array","isnan","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$2","x","test","isConstructorOrProto","key","isInteger","floor","hasOwnProp","hasOwnProperty","proc","require$$0","log","console","NODE_VERSION","versions","node","exitCode","code","v","split","setTimeout","exit","Notifier","this","configurable","enumerable","writable","parseArgs","opts","bools","strings","unknownFn","unknown","boolean","allBools","concat","filter","Boolean","forEach","aliases","aliasIsBoolean","some","keys","alias","y","string","k","defaults","default","argv","_","setKey","o","undefined","Number","lastKey","setArg","val","argDefined","notFlags","next","m","letters","broken","stopEarly","objectKeys","setReadOnly","CLI","options","self","pkg","help","title","version","updates","validate","stdout","on","stderr","error","close","bin","name","notifier","notify","c","message","ns"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,23,26]}